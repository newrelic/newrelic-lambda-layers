plugins {
    id 'java-library'
}

repositories {
    jcenter()
}

dependencies {
    implementation("io.opentracing:opentracing-util:0.33.0")
    implementation("com.newrelic.opentracing:newrelic-java-lambda:2.2.1")
    implementation("com.newrelic.opentracing:java-aws-lambda:2.1.0")
    implementation("com.amazonaws:aws-lambda-java-events:3.8.0")
    implementation("com.amazonaws:aws-lambda-java-core:1.2.0")
    implementation("com.amazonaws:aws-lambda-java-serialization:1.0.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.2")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.12.2")
    testImplementation("junit:junit:4.13")
    testImplementation('com.github.stefanbirkner:system-lambda:1.2.0')
    testImplementation('org.mockito:mockito-core:3.12.4')
}

def extensions = copySpec {
    from('extensions')
    into('extensions')
}

task packageLayer(type: Zip) {
    archiveBaseName = 'NewRelicJavaLayer'
    into('java/lib') {
        from configurations.compileClasspath
    }
    into('java/lib') {
        from fileTree('build/libs') {
            include 'NewRelicJavaLayer.jar'
        }
    }
    with extensions
}

ext.javaVersion = hasProperty('javaVersion') && project.getProperty('javaVersion') == 11 ?
        JavaVersion.VERSION_11 : JavaVersion.VERSION_1_8

java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

packageLayer.dependsOn build
